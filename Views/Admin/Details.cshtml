@using System.Globalization
@using Q42.DbTranslations.Helpers
@using Q42.DbTranslations.ViewModels
@model CultureGroupDetailsViewModel
@{
  Layout.Title = Model.Culture + " Localization";
  Script.Require("jQuery");
}

@using (Script.Foot())
{ 
  <script>
  //<![CDATA[
  	$(window).load(function () {
  		$('#translations input, #translations textarea').change(function (evt) {

  			// save new value to database
  			var newValue = $(this).val();
  			var url = "/Admin/localize/update";
  			var postdata = { culture: '@Model.Culture', id: $(this).data('id'), value: newValue, __RequestVerificationToken: $('input[name=__RequestVerificationToken]').val() }
  			$.post(url, postdata, onsuccess).error(function () { alert("error"); });

  		});
  	});

  	//	Show the defaults in the input fields if they are set
  	$('.items').find('td').each(function (i, e) {
  		if ($(e).html() != $(e).attr('title')) {
  			$(e).next().find('input').attr('placeholder', $(e).attr('title'));
  		}
  	});

  	function indicateEmptyCells() {
  		console.log('indicating empty cells');
  		$('.items').find('input').each(function (i, e) {
  			if ($(e).val() == '' && $(e).attr('placeholder') == undefined) {
  				$(e).css('background-color', '#ffaaaa');
  			} else {
  				$(e).css('background-color', 'white');
  			}
  		});
		}

		indicateEmptyCells();
		$('.items').find('input').each(function (i, e) {
			$(e).keyup(indicateEmptyCells);
		});


    function onsuccess(data, textStatus, jqXHR) {
    	// todo vinkie
			indicateEmptyCells();
    }
  //]]>
  </script>
}
@Html.AntiForgeryTokenOrchard()
<style>
  #translations input { width: 100%; }
  #translations textarea{ width: 100%; height: 100px; }
</style>

<div class="content">
  @Html.ActionLink("Back to the index", "Culture", new { culture = Model.Culture })
  <h2>@LocalizationHelpers.GetPoFileName(Model.CurrentGroupPath) in @Model.Culture</h2>
  <div id="translations">
    <table class="items">
      <tr>
        <th width="50%">@T("Key")</th>
        <th width="50%">@T("Value in {0}", Model.Culture)</th>
      </tr>
      @foreach (var translationGroup in Model.CurrentGroupTranslations)
      {
      <tr>
        <th colspan="2">@translationGroup.Key</th>
      </tr>
        foreach (var translation in translationGroup.OrderBy(t => t.Key))
        {
          <tr>
            <td title="@translation.OriginalString">@translation.Key</td>
            <td>
              @if (!Model.CanTranslate)
              {
                @translation.LocalString
              }
              else if (translation.OriginalString.Contains('\n'))
              {
                <textarea name="@translation.Id">@translation.LocalString</textarea>
              }else {
                <input type="text" value="@translation.LocalString" name="@translation.Id" 
                  data-id="@translation.Id" />
              }
            </td>
          </tr>
        }
      }
    </table>
  </div>
</div>
